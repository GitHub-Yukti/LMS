name: Deploy .NET Core Application with SQL Server

# Controls when the action will run. 
on:
  # Triggers the workflow on push or pull request events but only for the main branch
  push:
    branches: [ main ]
    paths-ignore:
      - README.md
      - .vscode/**
      - .gitignore
  pull_request:
    branches: [ main ]
    paths-ignore:
      - README.md
      - .vscode/**
      - .gitignore
      
  # Allows you to run this workflow manually from the Actions tab
  workflow_dispatch:

jobs:
  build:
    runs-on: ubuntu-latest

    services:
      sqlserver:
        image: mcr.microsoft.com/mssql/server:2022-latest
        env:
          ACCEPT_EULA: "Y"
          SA_PASSWORD: "p@sSw0rDd"
        ports:
          - 1433:1433
        options: >
          --health-cmd="exit 0" --health-interval=10s --health-timeout=5s --health-retries=5

    steps:
      - name: Checkout code from the correct branch
        uses: actions/checkout@v3
        with:
          ref: ${{ github.ref }}  # Automatically uses the branch that triggered the action

      - name: Wait for SQL Server to start
        run: |
          echo "Waiting for SQL Server to start..."
          sleep 30

      - name: Test SQL Server connection
        run: |
          /opt/mssql-tools/bin/sqlcmd -S localhost -U SA -P "p@sSw0rDd" -Q "SELECT @@VERSION"

      - name: Set up connection string
        run: |
          CONNECTION_STRING="Server=localhost,1433;Database=master;User Id=sa;Password=p@sSw0rDd;"
          echo "Connection string set: $CONNECTION_STRING"
          echo "CONNECTION_STRING=$CONNECTION_STRING" >> $GITHUB_ENV

      - name: Setup .NET Core
        uses: actions/setup-dotnet@v3
        with:
          dotnet-version: '7.x' # Adjust this to your .NET version

      - name: Restore dependencies
        run: dotnet restore

      - name: Build the application
        run: dotnet build --configuration Release

      - name: Publish the application
        run: |
          dotnet publish -c Release -o ./publish

      - name: Deploy to server
        env:
          CONNECTION_STRING: ${{ env.CONNECTION_STRING }}
        run: |
          echo "Deploying to server from branch ${{ github.ref }}..."

          # Example deployment using rsync (adjust to your server)
          rsync -avz ./publish/ user@your-server-ip:/var/www/your-app/

          # Or use scp to copy files to remote server
          # scp -r ./publish/* user@your-server-ip:/var/www/your-app/

          # Optionally restart the app (systemctl restart, docker restart, etc.)
          ssh user@your-server-ip "sudo systemctl restart your-app.service"
